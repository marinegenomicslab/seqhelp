usethis::use_test()
BiocManager::install("Rsamtools")
fa <- system.file("testdata", "tiny.fasta", package="seqhelp")
fa
fa <- system.file("inst", "testdata", "tiny.fasta", package="seqhelp")
system.file("inst", "testdata", "tiny.fasta", package="seqhelp")
library(seqhelp)
system.file("inst", "testdata", "tiny.fasta", package="seqhelp")
system.file(package="seqhelp")
system.file("inst", package="seqhelp")
system.file("tetsdata", package="seqhelp")
system.file("testdata", package="seqhelp")
system.file("testdata", "tiny.fasta", package="seqhelp")
fa <- system.file("testdata", "tiny.fasta", package="seqhelp")
FaFile(fa)
Rsamtools::FaFile(fa)
faidx <- Rsamtools::FaFile(fa)
faidx
Rsamtools::scanFa(faidx)
?Rsamtools
irange <- IRanges::IRanges(start = c(1), end = c(3), names = c("seq1"))
Rsamtools::scanFa(faidx, param = irange)
as.list(IRanges::IRanges(start = c(1), end = c(3), names = c("seq1")))
irange <- IRanges::IRanges(start = c(1), end = c(3), names = c("seq1"))
irange_list <- IRanges::IRangesList(irange)
Rsamtools::scanFa(faidx, param = irange_list)
irange_list
seqnames(irange_list)
Rsamtools::seqnames(irange_list)
GenomicRanges::seqnames(irange_list)
IRanges::seqnames(irange_list)
irange_list <- IRanges::IRangesList(seq1 = irange)
Rsamtools::scanFa(faidx, param = irange_list)
fa
grange <- Rsamtools::scanFa(faidx, param = irange_list)
grange$seq1
as.character(grange$seq1)
seq_start <- 1
seq_end <- 3
seq_name <- "seq1"
irange <- IRanges::IRanges(start = c(seq_start), end = c(seq_end), names = c(seq_name))
irange
irange_list <- IRanges::IRangesList(seq_name = irange)
irange_list
faidx <- Rsamtools::FaFile(fa)
grange <- Rsamtools::scanFa(faidx, param = irange_list)
irange_list <- IRanges::IRangesList(irange)
names(irange_list)
names(irange_list) <- seq_name
names(irange_list)
grange <- Rsamtools::scanFa(faidx, param = irange_list)
seq <- as.character(grange$seq_name)
seq
grange
seq <- as.character(grange$seq)
seq
attempt::stop_if(!is.null(accession) & !is.null(fasta), msg = "Need to specify either an accession or FASTA file, not both!")
devtools::load_all()
fetch_seq(fasta = fa, seq_name = "seq1", seq_start = 1, seq_end = 3)
expect_equal(tinyseq, "ATC")
tinyseq <- fetch_seq(fasta = fa, seq_name = "seq1", seq_start = 1, seq_end = 3)
expect_equal(tinyseq, "ATC")
devtools::test()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
fa <- system.file("testdata", "tiny.fasta", package="seqhelp")
tinyseq <- fetch_seq(fasta = fa, seq_name = "seq1", seq_start = 1, seq_end = 3)
expect_equal(tinyseq, "ATC")
library(testthat)
expect_equal(tinyseq, "ATC")
tinyseq
fa <- system.file("testdata", "tiny.fasta", package="seqhelp")
fa
tinyseq <- fetch_seq(fasta = fa, seq_name = "seq1", seq_start = 1, seq_end = 3)
library(seqhelp)
install.packages('MASS', lib='/usr/lib/R/library')
install.packages('lattice', lib='/usr/lib/R/library')
install.packages('nlme', lib='/usr/lib/R/library')
install.packages('Matrix', lib='/usr/lib/R/library')
quit()
